{
  "name": "Ativa/Desativa workflows por expiração",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 3
            }
          ]
        }
      },
      "id": "Cron_0300",
      "name": "Cron 03:00",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1.0,
      "position": [120, 280]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT empresa_id AS empresa,\n       workflow,\n       expiracao\n  FROM usuarios\n WHERE workflow IS NOT NULL;"
      },
      "id": "PG_Usuarios",
      "name": "Postgres (usuarios)",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1.2,
      "position": [340, 280],
      "credentials": {
        "postgres": {
          "id": "",
          "name": "COLOQUE-SUAS-CREDENCIAIS-AQUI"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const out = [];\nfor (const item of items) {\n  const w = (item.json.workflow || '').trim();\n  if (!w) continue;\n  out.push({ json: {\n    workflow: w,\n    expiracao: item.json.expiracao,\n    empresa: item.json.empresa\n  }});\n}\nreturn out;"
      },
      "id": "Normalize",
      "name": "Normaliza nomes",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2.0,
      "position": [560, 280]
    },
    {
      "parameters": {
        "url": "{{$env.N8N_BASE_URL}}/rest/workflows?filter[name]={{$json.workflow}}",
        "options": {
          "headers": {
            "X-N8N-API-KEY": "{{$env.N8N_API_KEY}}"
          },
          "timeout": 20000
        }
      },
      "id": "HTTP_GetWF",
      "name": "n8n API - GET workflow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [780, 280]
    },
    {
      "parameters": {
        "functionCode": "/* A API retorna uma lista. Pegamos o primeiro e anexamos o id */\nconst out = [];\nfor (const item of items) {\n  const body = item.json;\n  const list = Array.isArray(body.data) ? body.data : body;\n  let id = null;\n  let name = null;\n  if (Array.isArray(list) && list.length > 0) {\n    id = list[0].id;\n    name = list[0].name || list[0].displayName || null;\n  }\n  out.push({ json: { foundId: id, foundName: name } });\n}\nreturn out;"
      },
      "id": "ExtractID",
      "name": "Extrai ID",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2.0,
      "position": [980, 280]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [],
          "string": [
            {
              "value1": "={{$json.foundId}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "IfFound",
      "name": "Encontrou ID?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.0,
      "position": [1180, 280]
    },
    {
      "parameters": {
        "functionCode": "/* Decide se expirou (<= agora) ou está válido (> agora) */\nconst out = [];\nfor (const item of items) {\n  const exp = new Date($item(0,0).$node[\"Normaliza nomes\"].json.expiracao || item.json.expiracao);\n  const now = new Date();\n  const expirou = exp.getTime() <= now.getTime();\n  out.push({ json: { expirou } });\n}\nreturn out;"
      },
      "id": "CheckExpired",
      "name": "Está expirada?",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2.0,
      "position": [1380, 240]
    },
    {
      "parameters": {
        "url": "{{$env.N8N_BASE_URL}}/rest/workflows/{{$json.foundId}}",
        "method": "PATCH",
        "sendBody": true,
        "jsonParameters": true,
        "options": {
          "headers": {
            "X-N8N-API-KEY": "{{$env.N8N_API_KEY}}"
          },
          "timeout": 20000
        },
        "bodyParametersJson": "={\"active\": false}"
      },
      "id": "HTTP_Patch_Disable",
      "name": "n8n API - PATCH active=false",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1600, 200]
    },
    {
      "parameters": {
        "url": "{{$env.N8N_BASE_URL}}/rest/workflows/{{$json.foundId}}",
        "method": "PATCH",
        "sendBody": true,
        "jsonParameters": true,
        "options": {
          "headers": {
            "X-N8N-API-KEY": "{{$env.N8N_API_KEY}}"
          },
          "timeout": 20000
        },
        "bodyParametersJson": "={\"active\": true}"
      },
      "id": "HTTP_Patch_Enable",
      "name": "n8n API - PATCH active=true",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1600, 300]
    },
    {
      "parameters": {},
      "id": "Ignored",
      "name": "Ignorado",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1.0,
      "position": [1380, 360]
    }
  ],
  "connections": {
    "Cron 03:00": {
      "main": [
        [
          {
            "node": "Postgres (usuarios)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres (usuarios)": {
      "main": [
        [
          {
            "node": "Normaliza nomes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normaliza nomes": {
      "main": [
        [
          {
            "node": "n8n API - GET workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n API - GET workflow": {
      "main": [
        [
          {
            "node": "Extrai ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrai ID": {
      "main": [
        [
          {
            "node": "Encontrou ID?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou ID?": {
      "main": [
        [
          {
            "node": "Está expirada?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ignorado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Está expirada?": {
      "main": [
        [
          {
            "node": "n8n API - PATCH active=false",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "n8n API - PATCH active=true",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false
}
